[tool.poetry]
name = "fvirt"
version = "0.0.1"
description = "A small CLI frontend for libvirt."
authors = ["Austin S. Hemmelgarn <ahferroin7@gmail.com>"]
license = "MITNFA"
readme = "README.md"
repository = "https://github.com/Ferroin/fvirt"

[tool.poetry.scripts]
fvirt = "fvirt.cli:cli"

[tool.poetry.dependencies]
python = "^3.11"
blessed = "^1.20.0"
click = "^8.1.7"
frozendict = "^2.3.8"
libvirt-python = "^9.6.0,!=9.7.0"
lxml = "^4.9.3"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.5"
flake8-2020 = "^1.8.1"
flake8 = "^6.0.0"
flake8-async = "^22.11.14"
flake8-debug = "^0.2.0"
flake8-isort = "^6.1.0"
flake8-quotes = "^3.3.2"
flake8-sfs = "^0.0.4"
isort = "^5.12.0"
lxml-stubs = "^0.4.0"
mypy = "^1.5.0"
pytest = "^7.4.2"
pytest-click = "^1.1.0"
pytest-cov = "^4.1.0"
pytest-randomly = "^3.15.0"
pytest-timeout = "^2.2.0"
pytest-unique = "^0.1.1"
pytest-xdist = "^3.3.1"
ruamel-yaml = "^0.17.40"
simple-file-lock = "^2023.5"
yamllint = "^1.32.0"

[tool.mypy]
python_version = "3.11"
cache_fine_grained = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
sqlite_cache = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "libvirt"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "ruamel.yaml"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "simple_file_lock"
ignore_missing_imports = true

[tool.isort]
balanced_wrapping = true
combine_as_imports = true
combine_star = true
include_trailing_comma = false
line_length = 150
lines_between_types = 1
remove_redundant_aliases = true
reverse_relative = true
skip_gitignore = true
use_parentheses = true

[tool.pytest.ini_options]
minversion = 7.0
markers = [
    "slow: marks tests which take a long time to run",
    "libvirtd: marks tests which need a running copy of libvirtd on the local system",
]
testpaths = "tests"
timeout = 60
timeout_method = "thread"
xfail_strict = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
